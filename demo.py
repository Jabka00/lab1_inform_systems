#!/usr/bin/env python3
"""
–ü–æ–≤–Ω–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É MySQL
"""

import subprocess
import time
import webbrowser
import sys
import os

def print_header(title):
    """–ö—Ä–∞—Å–∏–≤–æ –¥—Ä—É–∫—É—î –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print("\n" + "=" * 60)
    print(f"  {title}")
    print("=" * 60)

def print_step(step_num, description):
    """–î—Ä—É–∫—É—î –Ω–æ–º–µ—Ä –∫—Ä–æ–∫—É"""
    print(f"\nüìã –ö—Ä–æ–∫ {step_num}: {description}")
    print("-" * 40)

def wait_for_user(message="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è..."):
    """–û—á—ñ–∫—É—î –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è Enter"""
    input(f"\n{message}")

def open_browser_tabs():
    """–í—ñ–¥–∫—Ä–∏–≤–∞—î –≤–∫–ª–∞–¥–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞"""
    urls = [
        ("Grafana Dashboard", "http://localhost:3000"),
        ("Prometheus", "http://localhost:9090"),
        ("Auth Service", "http://localhost:5000"),
        ("Metrics Endpoint", "http://localhost:8000/metrics")
    ]
    
    print("\nüåê –í—ñ–¥–∫—Ä–∏–≤–∞—é –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∏...")
    
    for name, url in urls:
        try:
            webbrowser.open(url)
            print(f"  ‚úÖ {name}: {url}")
            time.sleep(1)  # –ù–µ–≤–µ–ª–∏–∫–∞ –ø–∞—É–∑–∞ –º—ñ–∂ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è–º –≤–∫–ª–∞–¥–æ–∫
        except Exception as e:
            print(f"  ‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ {name}: {e}")

def show_demo_script():
    """–ü–æ–∫–∞–∑—É—î –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Å–∫—Ä–∏–ø—Ç"""
    print("\nüé≠ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π:")
    print("""
1. üîê –ê–í–¢–û–†–ò–ó–ê–¶–Ü–Ø
   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:5000
   ‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ –≤—Ö—ñ–¥: admin/admin123
   ‚Ä¢ –°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

2. üìä –ú–ï–¢–†–ò–ö–ò
   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:8000/metrics
   ‚Ä¢ –ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –Ω–∞ –≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏
   ‚Ä¢ –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É –Ω–∞ —Ñ–æ—Ä–º–∞—Ç Prometheus

3. üéØ PROMETHEUS  
   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:9090
   ‚Ä¢ –ü–µ—Ä–µ–π–¥—ñ—Ç—å –¥–æ Status ‚Üí Targets
   ‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø–∏—Ç–∏:
     - total_users_count
     - active_users_count
     - rate(orders_total[5m])

4. üìà GRAFANA
   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:3000
   ‚Ä¢ –£–≤—ñ–π–¥—ñ—Ç—å: admin/admin123
   ‚Ä¢ –í—ñ–¥–∫—Ä–∏–π—Ç–µ "MySQL Monitoring Dashboard"
   ‚Ä¢ –ü–æ–¥–∏–≤—ñ—Ç—å—Å—è –Ω–∞ –≥—Ä–∞—Ñ—ñ–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ

5. üîÑ LIVE DEMO
   ‚Ä¢ –î–∞–Ω—ñ –≥–µ–Ω–µ—Ä—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
   ‚Ä¢ –ú–µ—Ç—Ä–∏–∫–∏ –æ–Ω–æ–≤–ª—é—é—Ç—å—Å—è –∫–æ–∂–Ω—ñ 30 —Å–µ–∫—É–Ω–¥  
   ‚Ä¢ –ì—Ä–∞—Ñ—ñ–∫–∏ –ø–æ–∫–∞–∑—É—é—Ç—å –∑–º—ñ–Ω–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
""")

def run_comprehensive_demo():
    """–ó–∞–ø—É—Å–∫–∞—î –ø–æ–≤–Ω—É –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é"""
    
    print_header("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –°–ò–°–¢–ï–ú–ò –ú–û–ù–Ü–¢–û–†–ò–ù–ì–£ MYSQL")
    
    print("""
–¶—è —Å–∏—Å—Ç–µ–º–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î:
‚ú® –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ MySQL –∑ Prometheus —Ç–∞ Grafana
üîê –°–µ—Ä–≤—ñ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó –∑ JWT —Ç–æ–∫–µ–Ω–∞–º–∏  
üìä –ö–∞—Å—Ç–æ–º–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏ —Ç–∞ –¥–∞—à–±–æ—Ä–¥–∏
üê≥ –ü–æ–≤–Ω—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü—ñ—é –∑ Docker
üîÑ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ
""")
    
    wait_for_user("–ì–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é?")
    
    # –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–∏
    print_step(1, "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞–Ω—É —Å–∏—Å—Ç–µ–º–∏")
    
    result = subprocess.run("docker-compose ps", shell=True, capture_output=True, text=True)
    print(result.stdout)
    
    if "Up" not in result.stdout:
        print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞. –ó–∞–ø—É—Å–∫–∞—é...")
        subprocess.run("docker-compose up -d", shell=True)
        print("‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó (60 —Å–µ–∫—É–Ω–¥)...")
        time.sleep(60)
    else:
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞ —Ç–∞ –≥–æ—Ç–æ–≤–∞")
    
    wait_for_user()
    
    # –ö—Ä–æ–∫ 2: –í—ñ–¥–∫—Ä–∏—Ç—Ç—è —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤
    print_step(2, "–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤")
    open_browser_tabs()
    wait_for_user()
    
    # –ö—Ä–æ–∫ 3: –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π
    print_step(3, "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ–π–Ω–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π")
    show_demo_script()
    wait_for_user("–ì–æ—Ç–æ–≤—ñ —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é?")
    
    # –ö—Ä–æ–∫ 4: –ó–∞–ø—É—Å–∫ API –¥–µ–º–æ
    print_step(4, "–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API")
    print("–ó–∞–ø—É—Å–∫–∞—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é API...")
    subprocess.run([sys.executable, "api_examples.py"])
    
    wait_for_user()
    
    # –ö—Ä–æ–∫ 5: –°–∏—Å—Ç–µ–º–Ω—ñ —Ç–µ—Å—Ç–∏
    print_step(5, "–°–∏—Å—Ç–µ–º–Ω—ñ —Ç–µ—Å—Ç–∏")
    print("–ó–∞–ø—É—Å–∫–∞—é –ø–æ–≤–Ω—ñ —Å–∏—Å—Ç–µ–º–Ω—ñ —Ç–µ—Å—Ç–∏...")
    subprocess.run([sys.executable, "test_system.py"])
    
    wait_for_user()
    
    # –§—ñ–Ω–∞–ª
    print_header("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–Ü–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    
    print("""
–©–æ –≤–∏ –ø–æ–±–∞—á–∏–ª–∏:
‚úÖ –ü–æ–≤–Ω—ñ—Å—Ç—é —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—É —Å–∏—Å—Ç–µ–º—É –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
‚úÖ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—é –º—ñ–∂ –≤—Å—ñ–º–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
‚úÖ –†–µ–∞–ª—å–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏ —Ç–∞ –¥–∞—à–±–æ—Ä–¥–∏
‚úÖ –ü—Ä–∞—Ü—é—é—á—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—é —Ç–∞ API
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—É –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –¥–∞–Ω–∏—Ö

–§–∞–π–ª–∏ –ø—Ä–æ–µ–∫—Ç—É:
üìÅ auth/           - –°–µ—Ä–≤—ñ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
üìÅ data_generator/ - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–∞–Ω–∏—Ö  
üìÅ metrics_exporter/ - –ï–∫—Å–ø–æ—Ä—Ç–µ—Ä –º–µ—Ç—Ä–∏–∫
üìÅ config/         - –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
üìÅ grafana/        - –î–∞—à–±–æ—Ä–¥–∏ Grafana
üìÅ prometheus/     - –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è Prometheus
üìÑ docker-compose.yml - –û–ø–∏—Å –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤
üìÑ README.md       - –ü–æ–≤–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è

–ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:
üîß docker-compose logs -f  - –õ–æ–≥–∏ –≤—Å—ñ—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤
üîß docker-compose down     - –ó—É–ø–∏–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏  
üîß python test_system.py   - –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
üîß python start.py         - –®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫
""")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–≤—á–µ–Ω–Ω—è:")
    print("1. –ó–º—ñ–Ω—ñ—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –≤ metrics_exporter/app.py")
    print("2. –°—Ç–≤–æ—Ä—ñ—Ç—å –≤–ª–∞—Å–Ω—ñ –¥–∞—à–±–æ—Ä–¥–∏ –≤ Grafana") 
    print("3. –î–æ–¥–∞–π—Ç–µ –Ω–æ–≤—ñ —Ç–∞–±–ª–∏—Ü—ñ –≤ data_generator/app.py")
    print("4. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –∞–ª–µ—Ä—Ç–∏ –≤ Grafana")
    print("5. –Ü–Ω—Ç–µ–≥—Ä—É–π—Ç–µ –∑ —Ä–µ–∞–ª—å–Ω–æ—é –±–∞–∑–æ—é –¥–∞–Ω–∏—Ö")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    try:
        run_comprehensive_demo()
    except KeyboardInterrupt:
        print("\n\nüëã –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—é –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó: {e}")

if __name__ == "__main__":
    main()
