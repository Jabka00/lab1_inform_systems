#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –∑–∞–ø—É—Å–∫—É —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
"""

import subprocess
import time
import sys
import os

def run_command(command, description):
    """–í–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –∑ –æ–ø–∏—Å–æ–º"""
    print(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø—ñ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå {description} - –ø–æ–º–∏–ª–∫–∞:")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå {description} - –ø–æ–º–∏–ª–∫–∞: {e}")
        return False

def check_docker():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Docker"""
    return run_command("docker --version", "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker")

def check_docker_compose():
    """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ Docker Compose"""
    return run_command("docker-compose --version", "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ Docker Compose")

def stop_existing_containers():
    """–ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤"""
    return run_command("docker-compose down", "–ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤")

def start_system():
    """–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏"""
    return run_command("docker-compose up -d", "–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É")

def wait_for_system():
    """–û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏"""
    print("‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏...")
    
    for i in range(60):  # –ú–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥
        time.sleep(1)
        if i % 10 == 0:
            print(f"   –û—á—ñ–∫—É–≤–∞–Ω–Ω—è: {i+1}/60 —Å–µ–∫—É–Ω–¥")
    
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–∞—î –±—É—Ç–∏ –≥–æ—Ç–æ–≤–∞")

def show_status():
    """–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤"""
    print("\nüìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤:")
    subprocess.run("docker-compose ps", shell=True)

def show_urls():
    """–ü–æ–∫–∞–∑–∞—Ç–∏ URL —Å–µ—Ä–≤—ñ—Å—ñ–≤"""
    print("\nüåê –î–æ—Å—Ç—É–ø–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:")
    print("  ‚Ä¢ Grafana: http://localhost:3000 (admin/admin123)")
    print("  ‚Ä¢ Prometheus: http://localhost:9090")
    print("  ‚Ä¢ Auth Service: http://localhost:5000")
    print("  ‚Ä¢ Metrics: http://localhost:8000/metrics")
    print("  ‚Ä¢ MySQL: localhost:3306 (monitor_user/monitor_pass)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ –®–≤–∏–¥–∫–∏–π –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É MySQL")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
    if not check_docker():
        print("‚ùå Docker –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        return 1
    
    if not check_docker_compose():
        print("‚ùå Docker Compose –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Docker Compose —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.")
        return 1
    
    # –ó—É–ø–∏–Ω–∫–∞ —ñ—Å–Ω—É—é—á–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
    stop_existing_containers()
    
    # –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–∏
    if not start_system():
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–∏—Å—Ç–µ–º–∏")
        return 1
    
    # –û—á—ñ–∫—É–≤–∞–Ω–Ω—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    wait_for_system()
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç—É—Å
    show_status()
    show_urls()
    
    print("\nüéâ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
    print("\nüí° –ö–æ—Ä–∏—Å–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:")
    print("  ‚Ä¢ –ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤: docker-compose logs -f")
    print("  ‚Ä¢ –ó—É–ø–∏–Ω–∫–∞ —Å–∏—Å—Ç–µ–º–∏: docker-compose down")
    print("  ‚Ä¢ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏: python test_system.py")
    
    return 0

if __name__ == "__main__":
    sys.exit(main())
